name: Images
on:
  workflow_dispatch:
    branches: [main]
    inputs:
      manual_files:
        description: "Glob for images to be rebuilt"
        required: false
  push:
    branches: [main, staging, trying]
  pull_request:
    branches: [main]
jobs:
  collect-files:
    name: collect-files
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get changed files using a comma separator
        id: changed-files
        uses: tj-actions/changed-files@v36
        with:
          separator: " "
      - name: Install python
        uses: actions/setup-python@v4
      - name: Set push mode
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo PUSH_IMAGE=1 >> $GITHUB_ENV
      - name: Run
        id: set-matrix
        run: |
          modified_files=()
          if [ -n "${{ github.event.inputs.manual_files }}" ]; then
            modified_files+=($(ls ${{ github.event.inputs.manual_files }}))
          else
            modified_files+=(${{ steps.changed-files.outputs.all_modified_files }})
          fi
          python3 build.py --output-matrix "${modified_files[@]}"
  run-builds:
    name: run-builds
    needs: collect-files
    runs-on: ubuntu-latest
    if: ${{ fromJSON(needs.collect-files.outputs.matrix) }}
    strategy:
      matrix: ${{ fromJSON(needs.collect-files.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Login to docker
        run: |
          echo  ${{ secrets.GITHUB_TOKEN }} | docker login --username ${{ github.actor }} --password-stdin ghcr.io
      - run: docker buildx create --use
      - name: Download latest earthly
        run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.6.30/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
      - name: Earthly version
        run: earthly --version
      - name: Run
        run: |
          dir=${{ matrix.cwd }}
          if [ -n "$dir" ]; then
            cd "$dir"
          fi

          bash -exc "${{ join(matrix.args, ' ') }}"
  guard:
    name: guard
    needs: run-builds
    runs-on: ubuntu-latest
    steps:
      - name: Just report matrices as done
        run: |
          true
